;**********************;*                    *;* DO SATALIGHT THING *;*                    *;**********************;DOSAT DEC SATCNT BNE ERTTT; LDA #SATSPE STA SATCNT; LDA SATALY ; SATALIGHT ALREADY ON? BNE ERTTT2; LDA SATNUM ; ANY SATALIGHTS TO OUTPUT? BEQ ERTTT; DEC SATTIM ; TEST TIMER FOR OUTPUT BNE ERTTT; LDA NEWSAT ; RESET TIMER LESS THAN ORIGINAL STA SATTIM; LDA BOMNUM ; CHECK IF LEVEL OVER ORA BOMNX BEQ ERTTT; LDA RND+2 ; NOW CHOOSE Y EOR RND+3 SBC $D012 AND #$7F CMP #100 BCC POPSD AND #$3FPOPSD ADC #20 STA SATALY; LDA RND ; CHOOSE X DIRECTION AND TYPE AND #7 TAX EOR #1 STA SATTYP ; OPPOSITE DIR FOR CHECK; AND #$FE LSR A CLC ADC #SATSPR STA SCRN+$3F9 LDA SATXS,X STA SATALX; DEC SATNUM; LDA #SATMER ; UP RND MERVE OUTPUT STA RNDMER+1;ERTTT RTS;SATDED LDX SATALX ; WAIT FOR EXPL TO COVER SPRITE LDA EXPO,X CMP #5 ; REACHED MID POSITION? BCC ERTTT LDA #0 ; YES, REMOVE SPRITE STA SATALY STA VIC+3 LDA VIC+27 AND #%11111101 STA VIC+27 RTS;ERTTT2 LDA SATTYP ; CHECK IF SATALIGHT DEAD BMI SATDED ; SATALIGHT EXPLODING... AND #$FE ; DETERMINE TYPE ASL A CLC ADC SATTYP AND #$FE TAX ; X=0,6,12,18RECCKD STX C LDA SATALX ; CHECK OFFSETS CLC ADC DEDX,X CMP #160 ; X<0 OR X>159? BCS NDED6 STA X1 LDA SATALY ADC DEDY,X STA Y1 JSR HRADDR LDY #0 LDA (BYT),Y AND BITNO BEQ NDED6 ORA #%10101010 CMP #%10101010 BNE NDED6; LDA SATTYP ; SATALIGHT DIES... AND #$FE LSR A TAX ; INDEXER FOR TYPE LDA SATALX CLC ADC TOX,X CMP #$F0 ; CHECK TOO FAR -> BCS OKSDD7 CMP #161 BCC OKSDD7 LDA #160OKSDD7 STA X1 LDA SATALY CLC ADC TOY,X STA Y1; JSR EXPLOD; STX SATALX ; SAVE EXPLOSION NUMBER; INC UPDATE SED LDA SCORE CLC ADC SPNTS STA SCORE LDA SCORE+1 ADC SPNTS+1 STA SCORE+1 LDA SCORE+2 ADC #0 STA SCORE+2 LDA SCORE+3 ADC #0 STA SCORE+3 CLD; LDA VIC+27 ORA #2 STA VIC+27 SEC ; SET SATTYP NEGATIVE ROR SATTYP LDA #NORMER ; RESET MERVE RND OUTPUT STA RNDMER+1 RTS;NDED6 LDX C ; CHECK NEXT CORNER INX CPX #4 BEQ NDED7 CPX #10 BEQ NDED7 CPX #18 BEQ NDED7 CPX #24 BEQ NDED7 JMP RECCKD;NDED7 LDA SATTYP ; NOT DEAD, MOVE SATALIGHT AND #1 BEQ DODEC INC SATALX .BYTE $2CDODEC DEC SATALX LDA VIC+16 AND #%11111101 STA TEMP LDA SATALX ; NOW PLACE SATALIGHT CLC ADC #12 ; ACT 24 BUT ASL ASL A STA VIC+2 LDA #0 ROL A ROL A ORA TEMP STA VIC+16 LDA SATALY ADC #50 STA VIC+3; LDX SATTYP LDA SATALX CMP SATXS,X BNE ERTTT3 LDA #0 ; REMOVE SATALIGHT FROM SCREEN STA SATALY STA VIC+3 LDA #NORMER STA RNDMER+1ERTTT3 RTS;SATDES LDA #NORMER ; RESET MERVE OUTPUT STA RNDMER+1 LDA RND ; SETUP FOR BOMB LAUNCH EOR RND+1 ; CALLED BY MERVE ROUTINE SBC $D012 AND #7 STA ORGMER LDA SATTYP ; NOW FIND LAUNCH START LSR A TAX ; X=TYPE LDA SATALX CLC ADC TOX,X STA X1 LDA SATALY CLC ADC TOY,X ADC TOY,X STA Y1 JMP HRADDR;SATXS .BYTE $F8,160 .BYTE $F6,160 .BYTE $F5,160 .BYTE $F5,160;TOX .BYTE 4 .BYTE 5 .BYTE 5 .BYTE 5;TOY .BYTE 5 .BYTE 1 .BYTE 5 .BYTE 3;DEDX .BYTE 0 .BYTE 7 .BYTE 0 .BYTE 7; .BYTE 0,0; .BYTE 10 .BYTE 0 .BYTE 2 .BYTE 8; .BYTE 0,0; .BYTE 0 .BYTE 5 .BYTE 10 .BYTE 0 .BYTE 5 .BYTE 10; .BYTE 0 .BYTE 0 .BYTE 5 .BYTE 5 .BYTE 10 .BYTE 10;DEDY .BYTE 0 .BYTE 0 .BYTE 9 .BYTE 9; .BYTE 0,0; .BYTE 2 .BYTE 2 .BYTE 0 .BYTE 0; .BYTE 0,0; .BYTE 0 .BYTE 9 .BYTE 0 .BYTE 9 .BYTE 0 .BYTE 9; .BYTE 1 .BYTE 3 .BYTE 0 .BYTE 4 .BYTE 1 .BYTE 3; .FILE TARGETX