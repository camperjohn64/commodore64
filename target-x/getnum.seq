GETNUM LDX #0 ; GET NUMBER 1-4, CS IF BADDCKLDS LDA JOYXX,X ; SEE "BOMBS" FOR TABLE STA JOY1 STA JOY2; LDA JOY1 AND JOYYY,X BNE OHES; INX ; FOUND NUMBER, SET TXA CLC RTS;OHES INX CPX #4 BNE DCKLDS; SEC RTS;DISPLA LDX PLAYER ; DISPLAY "PLAYER X" LDY X24,X ; X*24-1 LDX #23;NMLOOP LDA NUMBLT,Y STA NUMBST,X LDA NUMBLM,Y STA NUMBSM,X LDA NUMBLB,Y STA NUMBSB,X DEY DEX BPL NMLOOP; LDX #2 .BYTE $2CDISTAR LDX #1 ; DISPLAY "TARGET" .BYTE $2CDISGOV LDX #0;WAVEIT STX C ; WAVE SIGN...; JSR CLRTOP JSR CLEARX; LDA #30 STA E; LDA #7 STA TEMP ; SET LENGTH LDA #%11000000 STA BITNO ; SET FIRST BIT; AND #0 ; SET COLOUR INDEXER STA COLNUM;NXTWIT LDA #3 ; THREE LEVELS STA I LDX C LDA LOWVEC,X STA BYT LDA HIGVEC,X STA BYT+1 WW=BASE+$CC8 LDA #<WW STA DELTX LDA #>WW STA DELTX+1;NXTWET LDY #$B0-1 LDA #$B0-1+8 ; FIND COUNTER BEFORE BITNO=$FF SEC SBC TEMP STA E+1 LDA BITNO STA T LDA COLNUM STA T+1;NXTWAT CPY TEMP ; WAIT DURING CLEAR AREA BCC OIAD ; FOR STEADY PLOT SPEED BEQ OIAD LDX #8OISD DEX BNE OISD; BEQ OIFD;OIAD LDA (BYT),Y SEC ROL A AND (BYT),Y ; %11 BIT PATTERN PAIRS ISOLATED PHA ; SAVE FOR ORA LDX T+1 AND COLRS,X ; SELECT COLOUR SCHEME STA X2 ; SAVE SCROLLED COLOUR PLA EOR #$FF ; ISOLATE LEFT-OVER BITS AND (BYT),Y ; FROM SIGN... ORA X2 ; AND MIX WITH COLOUR; AND T STA (DELTX),Y;OIFD TYA AND #7 ; TEST FOR BUMP OF COLOUR BNE NFF INC T+1 INC T+1 LDA T+1 CMP #6 BCC NFF SBC #6 STA T+1NFF DEY CPY #$FF BEQ ENDWAT DEC E+1 BNE NXTWAT; LDA #$FF STA T; BNE NXTWAT;ENDWAT LDA #<320 CLC ADC DELTX STA DELTX LDA #>320 ADC DELTX+1 STA DELTX+1 LDA #$B0 CLC ADC BYT STA BYT LDA BYT+1 ADC #0 STA BYT+1 DEC I BNE NXTWET; SEC ; FIX BITNO ROR BITNO SEC ROR BITNO LDA BITNO ; CHECK IF $FF EOR #$FF BNE NXTWOT STA BITNO LDA TEMP CLC ADC #8 STA TEMP; CMP #$B0 ; CHECK IF >$AF BCC NXTWOT LDA #$AF STA TEMP LDA #%11111111 ; RE-FIX BITNO STA BITNO DEC E ; CHECK IF DONE WAIT BNE NXTWOT; JMP S123 ; DO FAKE EXPLS TO CLEAR SCREEN;NXTWOT DEC COLNUM BPL NXTC LDA #5 STA COLNUMNXTC LDA JOY2 ; CHECK BUTTONS AND #$10 SEC ; CS MEANS EQ FOR NXTD BEQ NXTD JSR GETNUM BCC NXTD JMP NXTWIT;NXTD LDX #0 ; SET BEQ BCS JOYSTC ; JOYSTICK BUTTON PRESSED... LDX #1JOYSTC SEC PHP ; CS, EQ IF JOYSTICK BUTTON PHA ; IF NEQ, A=#1234 LDA #1 ; SET FLAGS FOR KEYS STA BASBTW+0 STA BASBTW+1 STA BASBTW+2 STA JOYBTW JSR CLRTOP PLA PLP RTS;CLRTOP LDA #>HRLAST ; CLEAR SCREEN UP TO BASE STA BYT+1 ; INIT. POINTER TO LAST PAGE AND #0 STA BYT TAY STA (BYT),Y ; THIS ONE DONE SEPARATELY LDY #<HRLAST ; START AT LAST OF BASE LDX #$20 ; X KEEPS TRACK OF PAGESCLRHRA STA (BYT),Y ; PUT IN 0'S DEY BNE CLRHRA DEC BYT+1 DEX BNE CLRHRA ; DO 32 PAGES; RTS;LOWVEC .BYTE <GAMSIN .BYTE <TARSIN .BYTE <PLASIN;HIGVEC .BYTE >GAMSIN .BYTE >TARSIN .BYTE >PLASIN;COLRS .BYTE %10101111 .BYTE %10111101 .BYTE %11110101 .BYTE %11010110 .BYTE %01011010 .BYTE %01101011;X24 .BYTE 23,47,71,95;S123 LDA #TABYS-TABXS STA TEMP STA EXCNT LDA #1 STA TEMP+1 ; SET TIMER BETWEEN EXPLOSIONS STA TEMPB ; SOUND TIMER;EXCLUD DEC TEMP+1 BNE DOSPD; LDX TEMP BEQ DOSPD DEC TEMP;      LDA #255        ; DON'T BOTHER RESETING TIMER;      STA TEMP+1 LDA TABXS-1,X STA X1 LDA TABYS-1,X STA Y1 JSR EXPLOD ; RECORD EXPLOSION LDA #1 ; RESET NEW VALUES STA EXPTIM,X ; DON'T LAST TOO LONG...;DOSPD JSR DOEXP DEC TEMPB BNE NDECSF LDA #16 STA TEMPB LDA STABX ; DEC SOUND BEQ NDECSF DEC STABX LDA STABX STA SOUND2;NDECSF LDA JOY2 ; CHECK BUTTONS AND #$10 SEC ; CS MEANS EQ FOR NXTD BEQ NXTR JSR GETNUM BCC NXTR LDA EXPNX BNE EXCLUD; CLC ;...FOR BUTTONS RTS;NXTR LDX #0 ; DON'T USE A, MAYBE # 1234 STX EXPNX JMP NXTD;TABXS .BYTE 70,40,55,85,50 .BYTE 45,110,115,90,65 .BYTE 75,100,41,60,105 .BYTE 80,116,95;TABYS .BYTE 87,87,97,97,87 .BYTE 97,87,97,87,97 .BYTE 97,87,95,87,97 .BYTE 87,88,97; .FILE SCORE