;**************;*            *;* FIND MERVE *;*            *;**************;FNDMER LDA MERNUM ; CHECK IF ANY TO DO BEQ FNDTOP; LDA MX ; FIND STARTING X,Y STA X1 LDA MY STA Y1; LDA MERNUM ; TEST TO PLACE DOT BMI DODOT; LDY MERDES ; NEXT BOMB DESTINATIONOPS INY CPY ORGMER ; ORIGINAL MERVE DEST BNE OPPS INYOPPS CPY #9 ; PAST END POINT? BCS NMRMER; LDA CHANGE,Y ; CHANGEOVER TO OTHER X TAX; LDA DESTRY,X ; CHECK IF CITY ALREADY DEAD BNE OPS; DEC MERNUM BNE LDPSD DEC MERNUM ; =$FF;LDPSD STY MERDES JMP OKSITE;DODOT LDA #1 ; SET COLOUR FOR DOT STA COLNUM JSR SETPIX AND #0 STA MERNUM BEQ FNDTOP ; ALWAYS...;NMRMER ORA #$FF ; NO MORE MERVES TO DO, SET FLAG STA MERNUM ; THEN OUTPUT RANDOM BOMB;;*************************;*                       *;* FIND TOP FOR BOMB/POD *;*                       *;*************************;FNDTOP LDA RND ; CHOOSE PLACE TO START EOR RND+1 SBC $D012 CMP #160 ; CHECK OFF-SCREEN BCC NG160 SBC #130NG160 STA X1 AND #0 STA Y1 ; STARTS AT TOP...;;*********************************;*                               *;* FIND DESTINATION FOR BOMB/POD *;*                               *;*********************************;FNDDES LDA RND ; FIND SITE TO GO TO... EOR RND+1 SBC $D012 AND #15 CMP #9 BCC NG9 SBC #9NG9 TAX; LDA DESTRY,X ; IS PLACE ALREADY DEAD? BNE FNDDES ; YES, TRY AGAIN...;OKSITE LDA SITESX,X STA X2 LDA SITESY,X STA Y2;EXT RTS;DD AND #0 ; PATCH WHEN ALL CITIES DEAD STA BOMNUM ; SET ALL BOMBS LAUNCHED RTS;;**********************;*                    *;* START BOMB RUNNING *;*    (X1,Y1) SETUP   *;*                    *;**********************;NEWBOM LDA BOMNUM ; CHECK IF ALL BOMBS LAUNCHED... BEQ EXT LDA BOMNX ; CHECK NUMBER OF BOMBS ON CMP #32 BEQ EXT ; TOO MANY...; LDA ALLDED ; CHECK IF ALL CITIES DEAD... BEQ DD; DEC BOMNUM LDY NXTBOM ; FIND BOMB TO LAUNCHCHKNXB LDA BYTB1,Y ; TEST IF AVAILABLE BEQ OKBM; INY TYA AND #31 TAY BPL CHKNXB ; ALWAYS...;OKBM STY TEMPA ; SAVE FOR LATER INY TYA AND #31 STA NXTBOM ; SET INDEXER FOR NEXT BOMB INC BOMNX; JSR FNDMER ; SET (X1,Y1) AND (X2,Y2) LDY TEMPA TXA ; SAVE DESTINATION STA ORGDES,Y;NEWMIS JSR HRADDR ; SET BYT AND BITNO LDY TEMPA LDA X1 STA ORGX,Y LDA Y1 STA ORGY,Y JSR FNDVEC ; SET I,E,DELTX,DELTY LDY TEMPA LDA I STA IB,Y LDA E ; SAVE SPECS STA EB,Y STA ORGE,Y LDA E+1 STA EB1,Y STA ORGE1,Y LDA DELTX STA DELTXB,Y LDA DELTX+1 STA DELTXC,Y LDA DELTY STA DELTYB,Y LDA DELTY+1 STA DELTYC,Y; LDA ORGY,Y BNE DONPIO LDX PODNUM ; CHECK TO PUT POD BEQ DONPIO LDX PODSON ; CHECK IF TOO MANY ON CPX #6 BEQ DONPIO; LDX #$FF ; FIND SPRITE TO USEFNDPSR INX LDA SPRUSE,X BNE FNDPSR; TXA STA ORGBIT,Y ; ORGBIT=SPRITE, ORGBY1=$FF INC PODSON DEC PODNUM ORA #$FF STA SPRUSE,X STA ORGBY1,Y BNE DONPI2 ; ALWAYS...;DONPIO LDA BYT STA ORGBYT,Y LDA BYT+1 STA ORGBY1,Y LDA BITNO STA ORGBIT,Y;DONPI2 LDA C STA CB,Y LDA C+1 STA CB1,Y;MX7 LDA BITNO STA BITNOB,Y LDA BYT STA BYTB,Y LDA BYT+1 STA BYTB1,Y LDA ORGBY1,Y ; CHECK FOR POD TEST CMP #$FF BEQ DOPODS; LDA #3 ; COLOUR 3, MISSILE HEAD CPY #32 ; CHECK BOMB OR MISSILE LDY #0 BCS NDIEB ; MISSILE, NOT DIE TILL TARGET LDA (BYT),Y ; TEST FOR EXPLOSION AND BITNO BEQ NDIE22 ORA #%10101010 CMP #%10101010 BEQ BMBDI2NDIE22 LDA #1NDIEB STA COLNUM JMP SPIX;DOPODS JMP DOPOD;BMBDI2 LDY TEMPA ; CHECK TO OFFER POINTS LDA BYTB1,Y CMP #>HRLAST BCC THUXY BNE THUUY LDA BYTB,Y CMP #<HRLAST BCS THUUYTHUXY INC UPDATE LDX #1 ; CHECK BOMB POINTS OR 5X FOR POD LDA ORGBY1,Y CMP #$FF BNE KOSD LDX #5;KOSD SEDKOSF LDA SCORE ; ADD 10 POINTS... CLC ADC BPNTS STA SCORE LDA SCORE+1 ADC #0 STA SCORE+1 LDA SCORE+2 ADC #0 STA SCORE+2 LDA SCORE+3 ADC #0 STA SCORE+3 DEX BNE KOSF; CLD;THUUY LDA BOMNX ; CHECK TIME FOR EXPLOSION CMP #8 ; >8 MEANS TOO MANY BCS MNSFD3;MNSFD2 LDA EXPNX ; CHECK IF TOO MANY CLOUDS CMP #10 .BYTE $24 ; SKIP CLC;BMBDIE CLC ; MAKE BOMB DIE, SET AUTOCLOUDMNSFD3 PHP LDY TEMPA ; CLEAR LINE LDA ORGX,Y STA X1 LDA ORGY,Y STA Y1 LDA ORGBY1,Y CMP #$FF ; CHECK IF POD BNE DONPIW PLP ; SET AUTOCLOUD CLC PHP DEC PODSON LDA ORGBIT,Y ; CLEAR SPRITE FROM SCREEN/TABLE TAX AND #0 STA SPRUSE,X TXA ASL A TAX AND #0 STA VIC+5,X BEQ DONPIR;DONPIW STA BYT+1 LDA ORGBYT,Y ; SET COUNTER STA BYT LDA ORGBIT,Y STA BITNO LDA ORGE,Y STA E LDA ORGE1,Y STA E+1 LDX TEMPA INC CB1,X INC CB,X BNE DX7 INC CB1,X;DX7 LDX IB,Y ; GET DIRECTION IN X CLC ; FORM E=E+DELTY LDA E ADC DELTYB,Y STA E LDA E+1 ADC DELTYC,Y STA E+1 BMI DX6 SEC ; FORM E=E-DELTX LDA E SBC DELTXB,Y STA E LDA E+1 SBC DELTXC,Y STA E+1 INX ; X BUMPED UP ONEDX6 LDY #0 LDA BITNO EOR #$FF AND (BYT),Y STA (BYT),Y JSR TRCKXY ; KEEP TRACK OF X1,Y1 JSR OUTPL2 ; OUTPUT ONE MOVE LDY TEMPA LDX TEMPA DEC CB,X ; BUMP COUNTER UP 1 BNE DX7 DEC CB1,X BNE DX7;DONPIR AND #0 ; SET BOMB NOT HERE STA BYTB1,Y CPY #32 BCS ITMID DEC BOMNX; PLP BCS POPP JMP EXPLOD ; MAKE X1,Y1 EXPLODE;ITMID DEC MISNX PLP JMP EXPLOD;POPP JMP EXPSND ; NO EXPLOSION, JUST SOUND;DOPOD LDX #0 LDY TEMPA LDA BITNOB,Y STA BITNO ; SAVE FOR LATER STA TEMP+1 LDA BYTB,Y STA BYT STA X2 LDA BYTB1,Y STA BYT+1 STA Y2;DOPOX STX TEMP CPX #0 ; CHECK PASS # BNE NOR1 JSR DOWN JSR DOWN JMP DOPOC;NOR1 CPX #1 ; CHECK PASS # BNE NOR2 JSR LEFT JSR LEFT JMP DOPOC;NOR2 CPX #2 BNE NOR3 JSR RIGHT JSR RIGHT JMP DOPOC;NOR3 JSR UP JSR UP;DOPOC LDY #0 ; CHECK PIXEL LDA (BYT),Y AND BITNO BEQ NDIEKL ORA #%10101010 CMP #%10101010 BEQ DIEKL;NDIEKL LDX TEMP INX CPX #5 BEQ NOPODX; LDA Y2 STA BYT+1 LDA X2 STA BYT LDA TEMP+1 STA BITNO JMP DOPOX;NOPODX LDY TEMPA LDA ORGX,Y ; PUT SPRITE ON CLC ADC #10 ASL A ; *2 FOR MULTICOLOUR TO SPRITE PHP ; SAVE HIGH BIT LDX ORGBIT,Y LDY YSS,X STA VIC,Y LDA MSBCS,X ; PUT IN MSB BIT EOR #$FF AND VIC+16 PLP ; RETURN CARRY OF ASL BCC NDOIS ORA MSBCS,XNDOIS STA VIC+16 LDY TEMPA ; RETURN BOMB NUMBER LDA ORGY,Y ; NOW PLACE Y CLC ADC #48 LDY YSS,X STA VIC+1,Y RTS;DIEKL JMP BMBDI2;TRCKXY TXATRCKX2 ASL A TAX LDA LV+1,X PHA LDA LV,X PHA PHP RTI;LV .WORD RIGHTB ; RIGHT .WORD LRB ; DOWN/RIGHT .WORD LEFTB ; LEFT .WORD LLB ; DOWN/LEFT .WORD RIGHTB ; RIGHT .WORD URB ; UP/RIGHT .WORD LEFTB ; LEFT .WORD ULB ; UP/LEFT .WORD DOWNB ; DOWN .WORD LRB ; DOWN/RIGHT .WORD DOWNB ; DOWN .WORD LLB ; LEFT/DOWN .WORD UPB ; UP .WORD URB ; UP/RIGHT .WORD UPB ; UP .WORD ULB ; UP/LEFT;LRB INC Y1RIGHTB INC X1 RTS;LLB INC Y1LEFTB DEC X1 RTS;URB DEC Y1 INC X1 RTS;ULB DEC Y1 DEC X1 RTS;DOWNB INC Y1 RTS;UPB DEC Y1 RTS;;**********************;*                    *;* MOVE SINGLE BOMB Y *;*                    *;**********************;MOVEBM LDA BYTB,Y STA BYT LDA BYTB1,Y STA BYT+1 LDA BITNOB,Y STA BITNO LDA ORGBY1,Y ; CHECK IF POD CMP #$FF BNE NDELD2 LDA NWCNT ; HALF-TIME PODS AND #1 BNE NDELD3 ; CHECK FOR MOVE RTS;WAITP JMP DOPOD ; WAIT FOR EXP TO CLR, TEST DEAD;NDELD3 LDA ORGY,Y ; CHECK IF POD TOO LOW CMP #153 ; FORCE MOVE IF >153 'CAUSE BCS NDELDT ; LAND SURFACE IS EXP COLOUR; LDX #3 ; ADDITION INDEXER LDY #0;CKWT2 LDA BYT ; ADD TO FIND LOC TO CHECK CLC ADC LOADD,X STA BYT LDA BYT+1 ADC HIADD,X STA BYT+1 LDA (BYT),Y BEQ NWAITP ORA #%10101010 CMP #%10101010 BEQ WAITP;NWAITP DEX BPL CKWT2; LDY TEMPA ; RESET Y,BYT LDA BYTB,Y STA BYT LDA BYTB1,Y STA BYT+1 BNE NDELDT ; NOTHING IN WAY, SKIP LINE PLOT;NDELD2 LDA #3 ; SET COLOUR 3, BOMB TAIL CPY #32 BCC BT LDA #1 ; SET COLOUR 3, MISSILE TAILBT STA COLNUM LDY #0 JSR SPIX ; SET PIXEL LDY TEMPANDELDT LDX IB,Y ; GET DIRECTION IN X CLC ; FORM E=E+DELTY LDA EB,Y ADC DELTYB,Y STA EB,Y ; FIRST LOW BYTE LDA EB1,Y ADC DELTYC,Y STA EB1,Y BMI MX6 SEC ; FORM E=E-DELTX LDA EB,Y SBC DELTXB,Y STA EB,Y LDA EB1,Y SBC DELTXC,Y STA EB1,Y INX ; X BUMPED UP ONEMX6 LDA ORGBY1,Y ; CHECK FOR POD CMP #$FF BNE MXA LDA ORGX,Y STA X1 LDA ORGY,Y STA Y1 TXA ; SAVE X DIRECTION PHA JSR TRCKX2 ; TRACK POD USING ORGX, ORGY PLA TAX LDA X1 STA ORGX,Y LDA Y1 STA ORGY,Y;MXA JSR OUTPLT ; OUTPUT ONE MOVE TYA TAX INC CB,X ; BUMP COUNTER UP 1 BNE MX8 INC CB1,X;MX8 LDA CB,X CMP DELTXB,X LDA CB1,X SBC DELTXC,X BCS MX9 ; DONE DRAW, MUST HAVE HIT CITY JMP MX7;MX9 CPX #32 ; MISSILE?, NO TARGET BCS ITMISL LDA ORGDES,X ; BOMB, FIND ORIGINAL TARGET TAX LDA DESTRY,X ; CHECK IF PLACE ALREADY DEAD BNE D2 DEC ALLDED;D2 INC DESTRY,XITMISL JMP BMBDIE;LOADD .BYTE $10,$30,$10,$38HIADD .BYTE 0,1,0,1;;******************;*                *;* MOVE ALL BOMBS *;*                *;******************;DOBOMB DEC BMCNT BEQ DOMISB ; NOT TIME YET, DO MISSILES JMP DOMISL;DOMISB LDA BOMSPE STA BMCNT; LDA BOMNX ; CHECK IF ANY ON... BEQ NNBMBO ; NO, TRY TO DO SO; LDY #0 ; START AT ZERO'TH BOMB;BLOOP LDA BYTB1,Y BEQ NBOM; STY TEMPA JSR MOVEBM ; MOVE BOMB LDY TEMPA;NBOM INY CPY #32 BNE BLOOP;;********************;*                  *;* FIND WHERE/IF TO *;*  PUT NEW  BOMBS  *;*                  *;********************;NNBMBO DEC NWCNT BNE DOMERV; JSR NEWBOM ; START NEW BOMB RUNNING; JSR SETSBP ; SOUNDS...; LDA #2 STA NWCNT ; SET COUNTER FOR NEXT PASS DEC WAVCNT ; COUNT NUMBER FOR WAVE BNE DOMERV; LDA NUMO4 ; RESET NUMBER OF BOMBS/WAVE STA WAVCNT LDA YWAV ; NEW WAVE MUST REACH YMAX STA NWCNT ; BEFORE NEXT WAVE STARTS AND #0 ; ANY MERVES ARE KILLED STA MERNUM;DOMERV LDA MERNUM BNE DOSMER; LDA NWCNT ; CHECK IF READY TO MERVE CMP #60 BCC DOMISL; LDA RND ; TEST RANDOM FOR MERVE EOR $D012RNDMER AND #NORMER BNE DOMISL ; NO MERVE...; LDA SATALY ; SATALIGHT ON SCREEN? BEQ NAT ; NO... LDA SATTYP ; EXPLODING? BMI NAT LDA SATALX ; WITHIN RANGE 9<X<150 CMP #10 BCC NAT CMP #150 BCS NAT; JSR SATDES JMP PATSAT;NAT LDY NXTBOM ; FIND BOMB TO MERVE...;TSTIT DEY TYA ; ANDY #31 AND #31 TAY CPY NXTBOM ; CHECKING WRAPPED? BEQ DOMISL; LDA ORGY,Y ; DON'T MERVE TWICE... BNE TSTIT ; CHECK BY WHERE BOMB STARTED LDA BYTB1,Y BEQ TSTIT CMP #>BASE+$18 ; MUST BE ABLE TO GET THERE... BCS TSTIT ; EXIT IF BOMB TOO LOW; STA BYT+1 LDA BYTB,Y STA BYT LDA BITNOB,Y STA BITNO; LDA ORGDES,Y ; SAVE ORIGINAL BOMB DEST TAY LDA OCHANG,Y STA ORGMER; JSR FNDXY ; FIND X,Y FROM BYT,BYT+1PATSAT LDA X1 STA MX LDA Y1 STA MY; LDA RND ; FIND NUMBER OF MERVES EOR $D012 AND #3 CLC ADC #2 ; MIN 2,MAX 5 STA MERNUM; LDA ORGMER SEC SBC MERNUM BCS DOER5; AND #0;DOER5 STA MERDES; JSR SETFBP ; SET FAST BEEP FOR MERVE;DOSMER JSR NEWBOM;;*********************;*                   *;* MOVE ALL MISSILES *;*                   *;*********************;DOMISL DEC MSCNT BNE RWET; LDA #MISSPE STA MSCNT; LDA MISNX ; CHECK IF ANY ON... BEQ SCNNEW; LDY #32 ; START AT ZERO'TH BOMB;MLOOP LDA BYTB1,Y BEQ NMIS; STY TEMPA JSR MOVEBM ; MOVE BOMB LDY TEMPA;NMIS INY CPY #32+8 BNE MLOOP;;*************************;*                       *;* SCAN FOR NEW MISSILES *;*                       *;*************************;SCNNEW LDA MISNX ; TEST IF TOO MANY ON CMP #8 BCS RWET; LDX #0; LDA BOMNUM ; CHECK LEVEL END... ORA BOMNX ORA SATALY BNE XWET;RWET RTS;TSTMJ3 JMP TSTMI3;TSTMJ2 JMP TSTMI2;XWET LDA #$7F STA JOY2; LDA JOY2 ; CHECK FOR JOYSTICK BUTTON AND #$10 BNE DOJOYX JMP DOJOYB;DOJOYX STX JOYBTW ; CLEAR JOY FLAG LDA #$7F ; CHECK CONTROL KEY... STA JOY1 STA JOY2 LDA JOY1 AND #4 BEQ RWET;NXTBAS LDA JOYXX,X ; TEST KEY STA JOY1 STA JOY2 LDA JOY1 AND JOYYY,X BNE TSTMJ3 ; NO PRESS, CLEAR FLAG;DODIS2 LDA BASBTW,X BNE TSTMJ2 INC BASBTW,X LDA DESTRY,X ; FIND IF BASE DESTROYED BNE TSTMJ2;NOD LDA MISNX ; CHECK TOO MANY MISSILES CMP #8 BCS RWET ; YES, EXIT; INC MISNX LDY NXTMIS ; FIND MISSILE TO LAUNCH;NMMIS LDA BYTB1,Y BEQ DODIS1 ; FOUND IT... INY TYA AND #7 ORA #32 TAY BNE NMMIS ; ALWAYS...;DODIS1 STY TEMPA ; PUT MARK ON... STX TEMPB LDX TARGEX ; FIND X,Y DEX STX X1 LDX TARGEY DEX STX Y1 LDA #1 ; COLOUR 1, BOMB HEAD STA COLNUM JSR SETPIX ; SET FIVE PIXELS FOR XMARK JSR LR JSR SPIX JSR UR JSR SPIX JSR DOWN JSR DOWN JSR SPIX JSR LEFT JSR LEFT JSR SPIX; LDX TEMPB LDA MISLFT,X ; CHECK TO REMOVE FROM SCREEN CMP BASEM,X BCS NOREMV ADC ADDFB,X ; ADD TO GET INDEXER TAY LDA BASEMX-1,Y ; SET POS TO MISSILE STA X1 LDA BASEMY-1,Y STA Y1 LDA #3 ; SET BASE BACKGROUND STA COLNUM JSR SETPIX JSR DOWN JSR SPIX JSR DOWN JSR SPIX JSR DOWN JSR SPIX JSR DOWN JSR SPIX;NOREMV LDX TEMPB LDA SITESX,X ; SET START STA X1 LDA SITESY,X STA Y1; LDA TARGEX ; SET DESTINATION STA X2 LDA TARGEY STA Y2; DEC MISLFT,X ; ONE MISSILE FROM BASE BNE STR INC DESTRY,X ; NO MISSILES LEFT, BASE DEAD DEC ALLDED;STR JSR NEWMIS ; START NEW MISSILE; AND #0 ; SET SOUND... STA SOUND1+4 LDA IRQTIM ORA #$E0 STA SOUND1+1; LDX #4MISSOU LDA STABY,X STA SOUND1+2,X DEX BPL MISSOU; LDX TEMPBTSTMI2 INX CPX #3 ; ONLY 3 BASES... BEQ TSTMI4 JMP NXTBAS;TSTMI4 RTS;TSTMI3 AND #0 ; RESET BUTTON PRESS STA BASBTW,X BEQ TSTMI2;JOYXX .BYTE $7F,$7F,$FD,$FD ; KEY 1,2,3,4JOYYY .BYTE 1,8,1,8;DOJOYB LDA JOYBTW BNE TSTMI4 INC JOYBTW LDA TARGEX ; JOYSTICK BUTTON CMP #44 ;...FIND SITE TO LAUNCH BCC DODIS3 LDX #2 CMP #110 BCS DODIS3 DEXDODIS3 LDA DESTRY,X ; IS CLOSEST BASE DEAD? BEQ NOB; LDX #1 LDA DESTRY+1 ; TEST MIDDLE BASE BEQ NOB; LDA DESTRY+0 ; TEST BOTH SIDE BASES ALIVE ORA DESTRY+2 BNE ANY1 ; NO, CHOOSE ANY BASE...; DEX ; X=0 LDA TARGEX ; CHOOSE L/R BASE, MID DEAD CMP #77 BCC NOB; LDX #2; BNE NOB;ANY1 LDX #0 ; CHOOSE ANY BASE, CAUSE ONLY 1ANY2 LDA DESTRY,X BEQ NOB INX CPX #3 BNE ANY2; RTS ; NO BASES ALIVE...;NOB JMP NOD;CHANGE .BYTE 0 .BYTE 3 .BYTE 4 .BYTE 5 .BYTE 1 .BYTE 6 .BYTE 7 .BYTE 8 .BYTE 2;OCHANG .BYTE 0 .BYTE 4 .BYTE 8 .BYTE 1 .BYTE 2 .BYTE 3 .BYTE 5 .BYTE 6 .BYTE 7;FNDXY LDA BITNO ; REVERSE HRADDR LDX #0;TSTTR ASL A BCS TH1 ASL A INX BNE TSTTR;TH1 STX X1 ; LOW 2 BITS OF X; LDA BYT AND #7 STA Y1 ; LOW 3 BITS OF Y; LDA BYT AND #%11111000 STA BYT LDA BYT+1 AND #%00011111 STA BYT+1; LDY #0 ; START DIVIDE BY 320;DIV LDA BYT+1 ; CHECK HIGH BYTE CMP #>320 BNE CKL LDA BYT CMP #<320CKL BCC FNDY; LDA BYT SBC #<320 STA BYT LDA BYT+1 SBC #>320 STA BYT+1 INY BNE DIV ; ALWAYS...;FNDY TYA ; INDEXER... ASL A ASL A ASL A ; *8 ORA Y1 ; +3 BITS STA Y1; LDA BYT+1 ; CAL X1 LSR A LDA BYT ROR A ORA X1 STA X1 RTS;SETSBP LDA NEWNMX ; SET SLOW BEEP BNE POPS LDA BOMNUM ; CHECK IF BOMB IS LAUNCHABLE BEQ POPS LDA BOMNX CMP #32 BEQ POPS LDA ALLDED BEQ POPS; LDA #10 STA NEWNMX AND #0 STA STABZ LDA #1 STA NEWTIMPOPS RTS;SETFBP LDA MERNMX ; SET FAST BEEP BNE POPS LDA BOMNUM ; CHECK IF BOMB IS LAUNCHABLE BEQ POPS LDA BOMNX CMP #32 BEQ POPS LDA ALLDED BEQ POPS; LDA #14 STA MERNMX AND #0 STA STABZ LDA #1 STA MERTIM RTS;STABY .BYTE 0,0,$81,$4A,0;SPRUSE .BYTE 0,0,0,0,0,0 ; SPRITE USAGE FLAGSYSS .BYTE 4,6,8,10,12,14MSBCS .BYTE %00000100 .BYTE %00001000 .BYTE %00010000 .BYTE %00100000 .BYTE %01000000 .BYTE %10000000; .FILE EXPLODE