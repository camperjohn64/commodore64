 .PAGE "EDITOR.6";****************************************************;*                                                  *;*                    RTC EDITOR REL                *;*                                                  *;* COMMAND LIST FOR PART 6                          *;*                                                  *;* PLIST   PLIST "NAME",LINE RANGE                  *;* COLOUR  COLOUR BACKGROUND,BORDER,CURSOR COLOUR   *;* BREAK   BREAK TO MONITER                         *;* REPEAT  TOGGLE REPEATED KEYS                     *;*                                                  *;* PLUS - COMMAND LIST                              *;*                                                  *;****************************************************;;  SUBROUTINE TO PAUSE; IF SPACE BAR DEPRESSED;    ANY KEY STARTS;HALT JSR GETKEY ; GET CHAR. BEQ HLTRTS PHA JSR STOP ; CHECK FOR STOP KEY BNE HLT020 PLA ; YEP, HE PRESSED ITHLT030 CMP DFLTO BEQ HLT060 JSR KILCRTHLT060 JSR ABORT ; ABORT ALL FILES JSR PSTRM .BYTE 13,"BREAK",0 JMP NOTDEL ; SAY READY.;HLT020 PLA CMP #" " ; SPACE BAR BNE HLTRTS ; NO - RETURNHLT040 JSR GETKEY ; SPACE KEY RELEASED CMP #" " BEQ HLT040 ; NO - WAITHLT050 JSR GETKEY ; ANY KEY TO GO ON BEQ HLT050 ; NO - WAIT CMP #3 ; STOP KEY PRINT BEQ HLT030 ; YESHLTRTS RTS;ABORT JSR CLRCHN ; ABORT FILES LDA #DSKFIL ; CLOSE DISKFILE JSR CLOSE LDA #ERRFIL ;...AND ERROR CHANNEL JMP CLOSE;;****************************************************;*                                                  *;*               TOGGLE FORMATTING SCROLL           *;*                                                  *;* SYNTAX: FORMAT                                   *;*                                                  *;****************************************************;FORMAT BNE FORERR LDA FNBYTE ; XOR FUNTION BYTE EOR #SCRL ;...WITH FORMATED SCROLLING BIT STA FNBYTE JMP READY;FORERR JMP SYNTAX ; SYNTAX ERROR;;****************************************************;*                                                  *;*                    PLIST                         *;*                                                  *;* LIST TO PRINTER WITH NAME AND NUMBERED PAGES     *;*                                                  *;* SYNTAX: PLIST "NAME",LINE RANGE                  *;*                                                  *;****************************************************;PLIST JSR EVLDOS AND #$7E ; FN+RNG^$FF BNE FORERR LDA #0 ; SET PAGE NUMBER TO ZERO STA PAGNUM STA PAGNUM+1 LDA MONVAR ; TEST RANGE LSR A BCS CHKPRT JSR RANGE ; CHECK LINE RANGECHKPRT JSR CMDPRT BCC NEWPAG JSR KILCRT JMP NODEV;NEWPAG LDX FNLEN ; GET NAME LENGTH DEX BMI HEAD40 DEX LDY #2HEAD10 DEX BMI HEAD40 LDA (FNADR),Y ; GET NAME CHARACTER JSR CHROUT ;...AND PRINT IT INY BNE HEAD10 ; ALWAYS;HEAD40 INC PAGNUM BNE HEAD50 INC PAGNUM+1;HEAD50 LDX #ENDPAG-PAGE-1 LDA PAGE,X JSR CHROUT DEX BPL HEAD50+2; LDX PAGNUM LDA PAGNUM+1 JSR LINPRT JSR CRTN LDA #59 ; SET PAGE LINE COUNTER STA COUNT JSR CRTN;PLST20 JSR CRLFPT BCS NEWPAG JSR HALT ; TEST STOP KEY AND PAUSE LDY #1 LDA (LOWTR),Y BEQ PLST70 INY LDA (LOWTR),Y STA LINNUM INY LDA (LOWTR),Y STA LINNUM+1 JSR TSTRNG ; BEYOND LINE RANGE BVC PLST10 ; NO - DO ITPLST70 JSR KILCRT JMP READY ; YES - SAY READY;PLST10 LDY #0 LDA (LOWTR),Y PHA INY LDA (LOWTR),Y PHA JSR LISTLN PLA STA LOWTR+1 PLA STA LOWTR JMP PLST20;CRLFPT DEC COUNT BNE HEAD70 LDX #6HEAD60 JSR CRTN DEX BNE HEAD60 SEC .BYTE SKIP1HEAD70 CLC RTS;PAGE .BYTE "# EGAP......" ; BACKWARDS "......PAGE #"ENDPAG;CHAR STA STACK-1 LDA FNBYTE AND #PASC PHP LDA STACK-1 PLP BEQ CHARPT AND #$7F CMP #$20 BCS GOOD CMP #CR BNE CHARPT LDA FNBYTE AND #LFON PHP LDA #CR PLP BEQ CHARPT JSR CHARPT LDA #10GOOD BIT STACK-1 BMI CHARPT CMP #$40 BCC CHARPT ORA #$20CHARPT JMP CHROUT;;  MEANING OF BITS SET IN MONVAR FOR THIS ROUTINE;; BIT7 - BIT6  - BIT5 - BIT4 - BIT3 - BIT2 - BIT1 - BIT0;1-FN -SDR -PRG -SEQ - @  -USR -UNIT-RANGE;0-NFN-NSDR-NPRG-NSEQ-NO@ -NUSR-NDEV-NRANGE;;  EVALUATE DOS EXPRESSION;EVLDOS JSR CRKWD LDX #0 STX MONVAR STX DRIVE STX FNLEN LDX #8 STX FA JSR CHRGET BEQ EVL010EVL020 CMP #"D" ; CHECK DRIVE # BEQ EVL030 CMP #$91 ; CHECK ON UNIT BEQ EVL040 CMP #"U" ; CHECK UNIT BEQ EVL050EVL190 CMP #34 ; CHECK FILE NAME BEQ EVL060 CMP #"(" ; CHECK PARAENTHESES BNE EVL075EVL060 JMP EVL090;EVL075 JMP EVL240;EVL070 JMP SYNTAX ; SAY SYNTAX ERROR;EVL010 JMP EVL080 ; EXIT EVALUTE DOS;EVL040 JMP GETUNT;EVL050 JMP EVL110;EVL030 BIT MONVAR BVS EVL070 JSR EVL120 CPX #$02 BCS EVL130 STX DRIVE LDA #SDR JMP SETBIT;EVL130 JMP EVL140;EVL090 LDA MONVAREVL180 BMI EVL270 JSR EVAEXP JSR FRESTR TAX ; SAVE FNLEN BEQ EVL130 LDY #0 LDA (INDEX1),Y CMP #"@" BNE EVL086 STA RPLACE LDA #REP BIT MONVAR BNE EVL270 ORA MONVAR STA MONVAR JSR PAR130 DEXEVL086 LDA (INDEX1),Y STA DOSNAM,Y INY DEX BNE EVL086; STY FNLEN LDA #FNSETBIT BIT MONVAR BNE EVL270 ORA MONVAR STA MONVAREVL100 JSR CHRGOT ; TEST IF END OF LINE BNE EVL220 JMP EVL010 ; YES - EXIT EVLUTE ROUTINE;EVL220 CMP #"," ; CHECK COMMA BNE EVL230 JSR CHRGET JMP EVL020;EVL230 CMP #$91 ; CHECK ON UNIT BNE EVL240 JMP EVL040;EVL240 CMP #$B7 ; USR FILE BNE EVL250 JSR CHRGET LDA #USR JMP SETBIT;EVL270 JMP SYNTAX ; SYNTAX ERROR;EVL250 CMP #"S" BNE EVL260 JSR CHRGET CMP #"E" BNE EVL270 JSR CHRGET CMP #"Q" BNE EVL270 JSR CHRGET LDA #SEQ JMP SETBIT;EVL260 CMP #"P" BNE SETRNG JSR CHRGET CMP #"R" BNE EVL270 JSR CHRGET CMP #"G" BNE EVL270 JSR CHRGET LDA #PRG JMP SETBIT;EVL080 INC FNLEN INC FNLEN LDA #"0" ORA DRIVE STA DRIVE LDA #":" STA DOSNAM-1 LDA MONVAR AND #REP BEQ OVRLAY INC FNLEN LDA #<RPLACE .BYTE SKIP2 ; SKIP 2 BYTESOVRLAY LDA #<DRIVE STA FNADR LDA #>DRIVE STA FNADR+1 LDX FNLEN LDA MONVAR RTS;SETRNG LDA MONVAR LSR A BCS EVLERR JSR RANGE JMP SETBIT;EVL140 JMP NOLNTH ; ILLEGAL QUANTITY ERROR;GETUNT JSR CHRGET CMP #"U" BNE EVLERREVL110 JSR EVL120 CPX #$20 BCS EVL140 CPX #8 BCC EVL140 STX FA LDA #UNIT JMP SETBIT;EVL120 JSR CHRGET BNE EVL290EVLERR JMP SYNTAX ; SYNTAX ERROR;EVL290 BCC EVL300 JSR BRCKT2 JSR EVLBYT+3 JMP BRCKT1;EVL300 JMP EVLBYT+3;RANGE JSR CHRGOT BCC RNG100 ; FROM CHRGOT A # PRINT BEQ RNG100 ; A TERMINATOR JSR CHKDSH BCS RNGERRRNG100 JSR REDECN ; GET FIRST NUMBER BCS RNGERR LDA LINNUM STA INPPTR LDA LINNUM+1 STA INPPTR+1 JSR FNDLIN ; FIND OR SET PTRS JSR CHRGOT ; GET LAST CHARACTER BEQ RNG200 ; SKIP REST IF DONE JSR CHKDSH ; TOKENIZED DASH BCS RNGERR JSR CHRGET ; YES - SKIP THE DASH JSR REDECN ; GET SECOND NUMBER BCS RNGERR BNE RNGERR ; NOT A NUMBERRNG200 LDA LINNUM ORA LINNUM ; WAS A # ENTERED PRINT BNE RNGRTS ; YES JSR MAXLIN ; SET LINE # TO $FFFFRNGRTS LDA LINNUM STA CURLIN LDA LINNUM+1 STA CURLIN+1 LDA #RNGDASH10 CLC RTS;CHKDSH CMP #"-" ; CHECK FOR NORMAL DASH BEQ DASH10 CMP #$AB ;...ALSO TOKINIZED DASH BEQ DASH10 SEC ; CARRY SET IF NOT FOUND RTS;RNGERR JMP SYNTAX ; SYNTAX ERROR;;****************************************************;*                                                  *;*                       COLOUR                     *;*                                                  *;* CHANGE BACKGROUND, BORDER AND CURSOR COLOURS     *;*                                                  *;* SYNTAX: COLOUR BACKGROUND, BORDER, CURSOR        *;*                                                  *;;****************************************************;COLOUR BEQ RNGERR ; ERROR IF NO EXPRESSION JSR GETNUM ; GET BACKGROUND COLOUR BCS RNGERR ; ERROR IF NONE STX BACK0 ; SHOVE THAT IN JSR CHRGOT ; GET NEXT CHARACTER BEQ COLORA ; EXIT IF NO OTHER NUMBERS JSR CHKSPC JSR GETNUM ; GET BORDER COLOUR NOW BCS RNGERR ; SYNTAX ERROR.. STX BORDER ; NOW COLOUR BORDER JSR CHRGOT ; CHECK IF CURSOR CHANGE BEQ COLORA JSR CHKSPC JSR GETNUM ; GET CURSOR COLOUR BCS RNGERR STX COLOR ; AND CHANGE CURSOR COLOUR JSR CHRGOT ; ERROR IF MORE CHARACTERS BNE RNGERR;COLORA JMP READY;GETNUM JSR REDECN BCS GNUMER LDA LINNUM+1 BEQ GNUMOKGNUMER SEC RTS;GNUMOK CLC LDX LINNUM RTS;;****************************************************;*                                                  *;*                 BREAK TO MONITER                 *;*                                                  *;* SYNTAX: BREAK -                                  *;*                                                  *;****************************************************;BREAK LDX #$F8 TSX ; CORRECT ANY STACK PROBLEMS LDA #0 PHA ; PUSH HI ADDRESS LDA #2 PHA ; PUSH LO ADDRESS LDA SPREG PHA ; PUSH STATUS LDA SAREG PHA ; PUSH A REGISTER LDA SXREG PHA ; PUSH X REGISTER LDA SYREG PHA ; PUSH Y REGISTER JMP (CBINV) ; PERFORM A "BRK";;****************************************************;*                                                  *;*               TOGGLE REPEATED KEYS               *;*                                                  *;* SYNTAX: REPEAT                                   *;*                                                  *;****************************************************;REPEAT BNE SERR LDA RPTFLG EOR #$80 ; FLIP REPEAT FLAG STA RPTFLG JMP READY;SERR JMP SYNTAX ; SYNTAX ERROR;; EDITOR COMMAND LIST;CLIST .BYTE "ASCIÉ" .BYTE "AUTÏ" .BYTE "BREAË" .BYTE "CATALOÇ" .BYTE "CHANGÅ" .BYTE "CLEAÒ" .BYTE "COLOUÒ" .BYTE "DELETÅ" .BYTE "DISË" .BYTE "DIRECTORÙ" .BYTE "GEÔ" .BYTE "FINÄ" .BYTE "FLISÔ" .BYTE "FORMAÔ" .BYTE "HEØ" .BYTE "KILÌ" .BYTE "LÆ" .BYTE "MODEÓ" .BYTE "MOVÅ" .BYTE "NUMBEÒ" .BYTE "OLÄ" .BYTE "PLISÔ" .BYTE "PUÔ" .BYTE "RENE×" .BYTE "REPEAÔ" .BYTE "RESEÔ" .BYTE "STATUÓ" .BYTE 0 ; END OF LIST MARKER;; JUMP TABLE FOR COMMANDS;CADR .WORD ASCII-1 .WORD AUTO-1 .WORD BREAK-1 .WORD DIRECT-1 .WORD FIND-1 .WORD CLTABS-1 .WORD COLOUR-1 .WORD DELETE-1 .WORD DISK-1 .WORD DIRECT-1 .WORD FETCH-1 .WORD FIND-1 .WORD FLIST-1 .WORD FORMAT-1 .WORD HEX-1 .WORD KILL-1 .WORD LFEED-1 .WORD FNSTAT-1 .WORD MOVE-1 .WORD RENUM-1 .WORD OLD-1 .WORD PLIST-1 .WORD PUT-1 .WORD OLD-1 .WORD REPEAT-1 .WORD RSTART-1 .WORD FNSTAT-1;ENDING .END;;JSM - 23/04/84 ADD COMMENTS, ADD REPEAT;               AND BREAK COMMANDS;               ALSO CHANGE "COLOR" TO "COLOUR";               CHANGED PAUSE ROUTINE;JSM - 23/04/84 PLIST NOW HAS PROBLEMS, I DUNNO WHATS WRONG;JSM - 25/09/84 ADD "ENDING" FOR BOOT