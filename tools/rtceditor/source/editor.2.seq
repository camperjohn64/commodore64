 .PAGE "EDITOR.2";****************************************************;*                                                  *;*                      RTC EDITOR                  *;*                                                  *;* COMMAND LIST FOR PART 2                          *;*                                                  *;* RENEW                                            *;* GET     GET NAME                                 *;* PUT     PUT NAME                                 *;* NUMBER  NUMBER START#,INC#,LINE RANGE            *;*                                                  *;****************************************************;;****************************************************;*                                                  *;*                    GET FROM DISK                 *;*                                                  *;* SYNTAX: GET "NAME",LINE RAGE                     *;*                                                  *;****************************************************;FETCH JSR EVLDOS ; EVALUATE DOS EXPRESSION BPL PUTSRT CPX #$13 BCS PUTLNG AND #%00101100 BNE PUTERR LDA MONVAR LSR A BCS GET005 JSR RANGEGET005 JSR SEARCH JSR FOR JSR PSTRM .BYTE 13,"LOADING",0 LDX #DSKFIL JSR CHKINGET100 LDA #1 JSR STOR4 ; JUNK FOR LINKSGET500 JSR GETIN ; GET A CHAR CMP #CR ; END OF LINE BEQ GET600 JSR STORTR ; NO - SAVE IT LDA STATUS ; EOI BNE GET700 ; YES - TERMINATE BEQ GET500 ; ALWAYSGET600 LDA #0 ; NULL BASIC END OF LINE JSR STORTR LDA STATUS ; EOI - ALL DONE BEQ GET100 ; NOGET700 TYA JSR STOR2 ; MAKE ZERO LINK LDA LOWTR STA VARTAB LDA LOWTR+1 STA VARTAB+1 JSR ABORT JSR LNKPRG JSR FNDTXT ; RESET PTR TO BEGINNING JSR CLRNUM ; SET DEFAULT FOR RENUMBER JMP COPNUM ; GO RENUMBER FILE;PUTERR JMP SYNTAX ; SYNTAX ERROR;PUTLNG JMP STRLNG ; STRING TO LONG ERROR;PUTSRT JMP NOLNTH ; ILLEGAL QUANTITY ERROR;;****************************************************;*                                                  *;*             OUTPUT PURE ASCII SOURCE             *;*                                                  *;* REMOVES EXTRA SPACES EXCEPT IN QUOTES AND        *;* IN COMMENTS                                      *;*                                                  *;* SYNTAX: PUT "NAME",LINE RANGE                    *;*                                                  *;****************************************************;PUT JSR EVLDOS ; EVALUATE DOS SYNTAX BPL PUTSRT ; NO FILENAME... CPX #19 ; CHECK IF FILENAME TOO LONG... BCC PUT005 AND #%00001000 ; YES, CHECK IF BECAUSE OF "@" BEQ PUTLNG CPX #20 ; YES, TEST FILENAME LENGTH-1 BCS PUTLNG LDA MONVAR ; CHECK FOR PRG OR USR FILESPUT005 AND #%00100100 BNE PUTERR ; PRG OR USR FILE, ERROR LDA MONVAR ; CHECK "@" AND #%00001000 BEQ PUT010 LDA #ERRFIL ; "@" FOUND, SCRATCH FILE LDX FA LDY #15 JSR SETLFS LDA FNLEN LDX FNADR LDY FNADR+1 JSR SETNAM JSR OPEN LDA #ERRFIL JSR CLOSEPUT010 LDY FNLEN LDX #3 ; ADD ",S,W"PUT020 LDA PUTTAB,X STA (FNADR),Y INY DEX BPL PUT020; STY FNLEN LDA MONVAR LSR A BCS PUT015 JSR RANGEPUT015 JSR FOR LDX #DSKFIL JSR CHKOUT BCS PUTDON BCC PUT100;PUTCR LDA #CR ; SEND (CR) FOR END OF LINE JSR CHROUT JSR INCTR ; SKIP LO LINKPUT100 JSR LOADTR ; GET HI LINK - DONE PRINT BEQ PUTDON ; YES LDX #0 JSR LOADTR STA LINNUM JSR LOADTR STA LINNUM+1 JSR TSTRNG ; DONE LINE RANGE BVC PUT400 ; NO - SKIP AND DO IT BCC PUT400 ; NO - SKIP AND DO ITPUTDON JSR ABORT ; CLOSE CHANNEL JMP NOTDEL ; SAY READY;PUT200 TYAPUT300 JSR CHROUT ; SEND ITPUT400 JSR LOADTR ; GET NEXT CHAR TAY ; SAVE IT BEQ PUTCR ; END OF LINE CMP #" " BNE PUT600 ; NO TXA BMI PUT200 ; YES - NO COMPRESS BNE PUT400 ; NO - BUT A SPACE BEFORE INX ; YES - SET FLAG BNE PUT200PUT600 CMP #";" ; A COMMENT PRINT BEQ PUT60A ; YES - NO CRUNCH ALLOWED CMP #34 ; QUOTE '"' BEQ PUT60A ; NO-CRUNCH ON THIS ALSO CMP #"'" ; ASCII STRING-NO CRUNCH BNE PUT700PUT60A LDX #$FF ; NO - SET FLAG FOR NO CRUNCHPUT700 TXA ; IN A COMMENT BMI PUT200 ; YES LDX #0 BEQ PUT200 ; ALWAYS;; PUT TABLE FOR SEQ ,WRITE;PUTTAB .BYTE "W,S," ; BACKWARDS ",S,W";STOR4 JSR STOR2 ; STORE 4 TIMESSTOR2 JSR STORTR ; STORE 2 TIMESSTORTR LDY #0 STA (LOWTR),Y JMP INCTR;;****************************************************;*                                                  *;*               RECOVER LOST PROGRAM               *;*                                                  *;* SYNTAX: OLD                                      *;*         RENEW                                    *;*                                                  *;****************************************************;OLD BNE OLDERR LDA #4 STA STREND LDA TXTTAB+1 STA STREND+1OLD110 JSR OLD120 BNE OLD110 JSR OLD120 LDA STREND STA (TXTTAB),Y INY LDA STREND+1 STA (TXTTAB),Y LDA TXTTAB STA VARTABOLD130 LDX #3OLD140 JSR OLD120 BNE OLD130 DEX BNE OLD140 JSR OLD120 LDX #3OLD150 LDA ARYTAB,X STA VARTAB,X DEX BPL OLD150 JMP READY;OLD120 LDY #0 INC STREND BNE *+4 INC STREND+1 LDA (STREND),Y RTS;OLDERR JMP SYNTAX ; SYNTAX ERROR;;****************************************************;*                                                  *;*                 RENUMBER PROGRAM                 *;*                                                  *;* SYNTAX: NUMBER                                   *;*         NUMBER START                             *;*         NUMBER START, INCREMENT                  *;*         NUMBER START, INCREMENT, LINE RANGE      *;*                                                  *;* DEFAULT RENUMBERING IS SET TO 1000, INCREMENT 10 *;*                                                  *;****************************************************;RENUM PHA PLA JSR CLRNUM ; SET DEFAULTS BEQ COPNUM ; NO - USE DEFAULT VALUES JSR REDECN ; GET NUMBER & CONVERT IN LINNUM BCS OLDERR LDX LINNUM ; LOW START # STX FRESPC ; SAVE STARTING LDX LINNUM+1 ; HIGH START # STX FRESPC+1 ; LINE NUMBER TAX ; DEFAULT INCREMENTS ? BEQ COPNUM ; USE DEFAULT JSR CHKSPC ; READ ALL SPACES AND CHECK FOR A COMMA JSR EVL290 ; GET NUMBER & CONVERT IN LINNUM TXA ; ZERO INCREMENT ? BEQ NUMRNG ; USE DEFAULT STA FRETOP ; SAVE LOW INC. VALUENUMRNG JSR CHRGOT ; LINE RANGE SPECIFIED BEQ COPNUM ; NO - START RENUMBERING JSR CHKCOM ; CHECK FOR COMMACOPNUM JSR RANGE ; GET LINE RANGE LDA FRESPC CMP INPPTR LDA FRESPC+1 SBC INPPTR+1 BCC NUM003 JSR POSNUM BEQ NUM115 BNE NUM002NUM02 JSR CHRGT2 STA LINNUM JSR CHRGT2 STA LINNUM+1 JSR TSTRNG BVS NUM03 BCS NUM03NUM002 JSR NUM385 JSR ADDINC JSR CHRGT3 BNE NUM02 JSR MAXLINNUM03 LDA FACMOH CMP LINNUM LDA FACHO SBC LINNUM+1 BCC GONUMNUM003 JMP NOLNTH ; ILLEGAL QUANTITY ERROR;; SINGLE PASS RENUMBER;GONUM JSR POSNUM ; START PASS JSR NUMSUB JMP NUM120;NUM110 JSR CHRGT3 ; GET LO & HI BYTE OF LINE BNE NUM120NUM115 JMP NOTDEL ; FIX BASIC LINE LINKS;NUM120 JSR CHRGT2 ; GET A BYTE STA LINNUM INY LDA (TXTPTR),Y STA LINNUM+1 JSR TSTRNG BVS NUM115 BCS NUM115 DEY LDA FACMOH ; STORE LOW BYTE OF STA (TXTPTR),Y ; THE NEW LINE NUMBER JSR CHRGT2 ; GET NEXT BYTE LDA FACHO ; STORE HI BYTE OF STA (TXTPTR),Y ; THE NEW LINE NUMBER JSR NUM370 ; CALC. NEXT LINE # BEQ NUM110 ; ALWAYS;NUMSUB SEC LDA TXTPTR SBC #2 STA TXTPTR BCS *+4 DEC TXTPTR+1 RTS;POSNUM LDA FRESPC ; SET FLOATING STA FACMOH ; ACCUMULATOR = START # LDA FRESPC+1 ; AND RESET BASIC STA FACHO ; POINTERS TO THE START JSR RBSEXNUM366 JSR CHRGT3 BEQ NUM367 JSR CHRGT2 STA LINNUM JSR CHRGT2 STA LINNUM+1 JSR TSTRNG BVS NUM360 BCS NUM360 LDA #1NUM367 RTS;NUM360 JSR NUM385 BEQ NUM366 ; ALWAYS;NUM370 JSR ADDINCNUM385 JSR CHRGT2 ; READ THROUGHT THE BNE NUM385 ; TEXT UNTILL THE END OF LINE RTS;ADDINC CLC LDA FACMOH ; CALC. NEXT LINE ADC FRETOP ; TO THE OLD LINE NUMBER STA FACMOH ; SAVE THE RESULT IN BCC NUM367 ; ACCUMULATOR #1 INC FACHO RTS;CHRGT3 JSR CHRGT2 ; GET 2ND BYTECHRGT2 JSR TRCINC ; GET ONE BYTECHRGO2 LDY #0 LDA (TXTPTR),Y RTS; .FILE EDITOR.3;JSR - 04/06/85 MAKE "PUT" SCRATCH INSTEAD OF REPLACE